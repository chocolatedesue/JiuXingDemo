{
  "openapi": "3.0.2",
  "info": {
    "title": "九型人格demo",
    "description": "demo接口文档",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/commit": {
      "post": {
        "tags": [
          "学生"
        ],
        "summary": "Add Commit",
        "description": "提交测试结果,res为测试结果,\n          例如：res = [1,2,3,...9] -> 代表一类得分为1，二类得分为2，三类得分为3，\n          ...，九类得分为9, 接口返回分类 用于确保数据保存成功",
        "operationId": "add_commit_api_v1_commit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitCreate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/addUser": {
      "post": {
        "tags": [
          "dev"
        ],
        "summary": "Add User",
        "description": "用于开发时录入用户",
        "operationId": "add_user_api_v1_addUser_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "书院"
        ],
        "summary": "Login For Access Token",
        "description": "登录接口，返回token 失败401",
        "operationId": "login_for_access_token_api_v1_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_api_v1_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/query": {
      "get": {
        "tags": [
          "书院"
        ],
        "summary": "Get Commits",
        "description": "查询接口，返回指定长度的提交的数据, 如果长度小于limit则返回全部",
        "operationId": "get_commits_api_v1_query_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 50
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/deleteById": {
      "delete": {
        "tags": [
          "书院"
        ],
        "summary": "Delete Commit",
        "description": "删除指定id的提交",
        "operationId": "delete_commit_api_v1_deleteById_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/queryById": {
      "get": {
        "tags": [
          "书院"
        ],
        "summary": "Get Commit By Id",
        "description": "查询接口，返回指定编号的提交的数据",
        "operationId": "get_commit_by_id_api_v1_queryById_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/getExcel": {
      "get": {
        "tags": [
          "书院"
        ],
        "summary": "Get Docs",
        "description": "返回excel文件",
        "operationId": "get_docs_api_v1_getExcel_get",
        "responses": {
          "200": {
            "description": "返回二进制文件",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_for_access_token_api_v1_login_post": {
        "title": "Body_login_for_access_token_api_v1_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "Commit": {
        "title": "Commit",
        "required": [
          "name",
          "stu_id",
          "major",
          "instructor",
          "res"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "stu_id": {
            "title": "Stu Id",
            "type": "string"
          },
          "major": {
            "title": "Major",
            "type": "string"
          },
          "instructor": {
            "title": "Instructor",
            "type": "string"
          },
          "res": {
            "title": "Res",
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "CommitCreate": {
        "title": "CommitCreate",
        "required": [
          "time",
          "type",
          "name",
          "stu_id",
          "major",
          "instructor",
          "res"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "stu_id": {
            "title": "Stu Id",
            "type": "string"
          },
          "major": {
            "title": "Major",
            "type": "string"
          },
          "instructor": {
            "title": "Instructor",
            "type": "string"
          },
          "res": {
            "title": "Res",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Message": {
        "title": "Message",
        "required": [
          "msg"
        ],
        "type": "object",
        "properties": {
          "msg": {
            "title": "Msg",
            "type": "string"
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": [
          "access_token",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "required": [
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/login"
          }
        }
      }
    }
  }
}